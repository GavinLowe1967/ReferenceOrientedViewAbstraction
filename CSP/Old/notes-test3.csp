This version has the watchdog synchronising with the thread before the node is
initiailised, which aims to ensure all nodes satisfy the expected invariant.

First only pushes from {A}

#abstractions = 36
[16[-1]() || 18[-1](N0) || 19[-1]()] || 10[1](T0)
[16[-1]() || 18[-1](N0) || 19[-1]()] || 6[0](N1)
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N0,N1) || [7[0](N1,N2)]
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N0,N1) || [7[0](N1,Null)]
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N0,Null)
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N1,N0) || [7[0](N0,N2)]
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N1,N0) || [7[0](N0,Null)]
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N1,N2) || [7[0](N2,N3)]
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N1,N2) || [7[0](N2,Null)]
[16[-1]() || 18[-1](N0) || 19[-1]()] || 7[0](N1,Null)
[16[-1]() || 18[-1](Null) || 19[-1]()] || 10[1](T0)
[16[-1]() || 18[-1](Null) || 19[-1]()] || 6[0](N0)
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 10[1](T1)
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 11[1](T0)
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 12[1](T0,N0) || [7[0](N0,N1)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 12[1](T0,N0) || [7[0](N0,Null)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 13[1](T0,N0) || [7[0](N0,N1)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 13[1](T0,N0) || [7[0](N0,Null)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 14[1](T0,N1) || [7[0](N1,N0)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 15[1](T0)
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 6[0](N1)
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N0,N1) || [7[0](N1,N2)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N0,N1) || [7[0](N1,Null)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N0,Null)
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N1,N0) || [7[0](N0,N2)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N1,N0) || [7[0](N0,Null)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N1,N2) || [7[0](N2,N3)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N1,N2) || [7[0](N2,Null)]
[17[-1](T0) || 18[-1](N0) || 19[-1]()] || 7[0](N1,Null)
[17[-1](T0) || 18[-1](Null) || 19[-1]()] || 10[1](T1)
[17[-1](T0) || 18[-1](Null) || 19[-1]()] || 11[1](T0)
[17[-1](T0) || 18[-1](Null) || 19[-1]()] || 12[1](T0,Null)
[17[-1](T0) || 18[-1](Null) || 19[-1]()] || 13[1](T0,Null)
[17[-1](T0) || 18[-1](Null) || 19[-1]()] || 14[1](T0,N0) || [7[0](N0,Null)]
[17[-1](T0) || 18[-1](Null) || 19[-1]()] || 6[0](N0)
[17[-1](T0) || 18[-1](Null) || 19[-1]()] || 7[0](N0,Null)

I think that is as expected.  A node can point to the top node when no thread
holds the lock, which does not correspond to the concrete invariants.

With pushes from {A,B}, abstractions = 87.

--------

With pushes from {A,B,C}, abstractions = 124, including abstractions like
[20[-1]() || 22[-1](N0) || 24[-1]()] || 9[0](N0,N1) || [7[0](N1,N2)]
which looks wrong.

Effect of 
[21[-1](T0) || 22[-1](N0) || 24[-1]()] || [13[1](T0,N0) || 7[0](N0,Null) || 6[0](N1)] 
 -> [21[-1](T0) || 22[-1](N0) || 24[-1]()] || [19[1](T0,N1) || 7[0](N0,Null) || 9[0](N1,N0)]
on [21[-1](T0) || 22[-1](N0) || 24[-1]()] || 6[0](N1):  
 -> [21[-1](T0) || 22[-1](N0) || 24[-1]()] || 9[0](N1,N0) || [7[0](N0,Null)].  

Watchdog: 23 = WD0; 24 = WD1 (B pushed)

Includes transition (step 10)
[21[-1](T0) || 22[-1](N0) || 24[-1]()] || [14[1](T0,N0) || 7[0](N0,Null)]
-initNode.T0.N1.B.N0-> [21[-1](T0) || 22[-1](N0) || 24[-1]()] || [18[1](T0,N1)
|| 7[0](N0,Null)]

I tihnk this model doesn't work.  The watchdog changes state before the node
is initialised.    The above transition gives a state with WD in state 24 but
A at the top of the stack. 

Have WD sync on initNode event?  (Not currently supported).  And also the
setTop?

Or adapt current model so WD also syncs on setTop? 